{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jteix\\\\Coding\\\\pilot-1\\\\src\\\\components\\\\MovieCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Star, Plus, Check } from 'lucide-react';\nimport './MovieCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCard = ({\n  movie\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [isInWatchlist, setIsInWatchlist] = useState(false);\n  const handleCardClick = () => {\n    navigate(`/movie/${movie.id}`);\n  };\n  const handleWatchlistClick = e => {\n    e.stopPropagation();\n    setIsInWatchlist(!isInWatchlist);\n  };\n  const getPosterUrl = posterPath => {\n    if (!posterPath) return '/api/placeholder/300/450';\n    return `https://image.tmdb.org/t/p/w300${posterPath}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card\",\n    onClick: handleCardClick,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `watchlist-btn ${isInWatchlist ? 'added' : ''}`,\n      onClick: handleWatchlistClick,\n      title: isInWatchlist ? 'Remove from watchlist' : 'Add to watchlist',\n      children: isInWatchlist ? /*#__PURE__*/_jsxDEV(Check, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(Plus, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), movie.vote_average > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(Star, {\n        size: 12,\n        fill: \"currentColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), movie.vote_average.toFixed(1)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getPosterUrl(movie.poster_path),\n      alt: movie.title || movie.name,\n      className: \"movie-poster\",\n      loading: \"lazy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"movie-title\",\n        children: movie.title || movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"movie-year\",\n          children: new Date(movie.release_date || movie.first_air_date).getFullYear() || 'TBA'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), movie.vote_average > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-rating\",\n          children: [/*#__PURE__*/_jsxDEV(Star, {\n            size: 14,\n            fill: \"currentColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), movie.vote_average.toFixed(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), movie.genre_ids && movie.genre_ids.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-genre\",\n        children: getGenreName(movie.genre_ids[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to get genre name by ID\n_s(MovieCard, \"WGXqQu6rchLJgetUMXwydTYMFnM=\", false, function () {\n  return [useNavigate];\n});\n_c = MovieCard;\nconst getGenreName = genreId => {\n  const genres = {\n    28: 'Action',\n    12: 'Adventure',\n    16: 'Animation',\n    35: 'Comedy',\n    80: 'Crime',\n    99: 'Documentary',\n    18: 'Drama',\n    10751: 'Family',\n    14: 'Fantasy',\n    36: 'History',\n    27: 'Horror',\n    10402: 'Music',\n    9648: 'Mystery',\n    10749: 'Romance',\n    878: 'Sci-Fi',\n    10770: 'TV Movie',\n    53: 'Thriller',\n    10752: 'War',\n    37: 'Western'\n  };\n  return genres[genreId] || 'Unknown';\n};\nexport default MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["React","useState","useNavigate","Star","Plus","Check","jsxDEV","_jsxDEV","MovieCard","movie","_s","navigate","isInWatchlist","setIsInWatchlist","handleCardClick","id","handleWatchlistClick","e","stopPropagation","getPosterUrl","posterPath","className","onClick","children","title","size","fileName","_jsxFileName","lineNumber","columnNumber","vote_average","fill","toFixed","src","poster_path","alt","name","loading","Date","release_date","first_air_date","getFullYear","genre_ids","length","getGenreName","_c","genreId","genres","$RefreshReg$"],"sources":["C:/Users/jteix/Coding/pilot-1/src/components/MovieCard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Star, Plus, Check } from 'lucide-react';\r\nimport './MovieCard.css';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const navigate = useNavigate();\r\n  const [isInWatchlist, setIsInWatchlist] = useState(false);\r\n\r\n  const handleCardClick = () => {\r\n    navigate(`/movie/${movie.id}`);\r\n  };\r\n\r\n  const handleWatchlistClick = (e) => {\r\n    e.stopPropagation();\r\n    setIsInWatchlist(!isInWatchlist);\r\n  };\r\n\r\n  const getPosterUrl = (posterPath) => {\r\n    if (!posterPath) return '/api/placeholder/300/450';\r\n    return `https://image.tmdb.org/t/p/w300${posterPath}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"movie-card\" onClick={handleCardClick}>\r\n      <button \r\n        className={`watchlist-btn ${isInWatchlist ? 'added' : ''}`}\r\n        onClick={handleWatchlistClick}\r\n        title={isInWatchlist ? 'Remove from watchlist' : 'Add to watchlist'}\r\n      >\r\n        {isInWatchlist ? <Check size={16} /> : <Plus size={16} />}\r\n      </button>\r\n\r\n      {movie.vote_average > 0 && (\r\n        <div className=\"rating-overlay\">\r\n          <Star size={12} fill=\"currentColor\" />\r\n          {movie.vote_average.toFixed(1)}\r\n        </div>\r\n      )}\r\n\r\n      <img\r\n        src={getPosterUrl(movie.poster_path)}\r\n        alt={movie.title || movie.name}\r\n        className=\"movie-poster\"\r\n        loading=\"lazy\"\r\n      />\r\n\r\n      <div className=\"movie-info\">\r\n        <h3 className=\"movie-title\">{movie.title || movie.name}</h3>\r\n        <div className=\"movie-meta\">\r\n          <span className=\"movie-year\">\r\n            {new Date(movie.release_date || movie.first_air_date).getFullYear() || 'TBA'}\r\n          </span>\r\n          {movie.vote_average > 0 && (\r\n            <div className=\"movie-rating\">\r\n              <Star size={14} fill=\"currentColor\" />\r\n              {movie.vote_average.toFixed(1)}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {movie.genre_ids && movie.genre_ids.length > 0 && (\r\n          <div className=\"movie-genre\">\r\n            {getGenreName(movie.genre_ids[0])}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Helper function to get genre name by ID\r\nconst getGenreName = (genreId) => {\r\n  const genres = {\r\n    28: 'Action',\r\n    12: 'Adventure',\r\n    16: 'Animation',\r\n    35: 'Comedy',\r\n    80: 'Crime',\r\n    99: 'Documentary',\r\n    18: 'Drama',\r\n    10751: 'Family',\r\n    14: 'Fantasy',\r\n    36: 'History',\r\n    27: 'Horror',\r\n    10402: 'Music',\r\n    9648: 'Mystery',\r\n    10749: 'Romance',\r\n    878: 'Sci-Fi',\r\n    10770: 'TV Movie',\r\n    53: 'Thriller',\r\n    10752: 'War',\r\n    37: 'Western'\r\n  };\r\n  return genres[genreId] || 'Unknown';\r\n};\r\n\r\nexport default MovieCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}